<Panel>
	<Panel ux:Class="My.TextInput" Label="" FocusColor="PrimaryColor" Icon="" Focused="false" TextValue="" Error="False" ErrorMessage="" ActionStyle="Default" IsPassword="False" AutoCapitalizationHint="None" InputHint="Default" HasActionStyleHandler="False">
		<string ux:Property="Label"/>
		<float4 ux:Property="FocusColor"/>
		<string ux:Property="Icon"/>
		<string ux:Property="TextValue"/>
		<bool ux:Property="Focused"/>
		<bool ux:Property="Error"/>
		<string ux:Property="ErrorMessage"/>
		<!-- TextInputSpecific Properties -->
		<string ux:Property="ActionStyle"/>
		<object ux:Property="ActionStyleHandler"/>
		<bool ux:Property="HasActionStyleHandler"/>
		<bool ux:Property="IsPassword"/>
		<string ux:Property="AutoCapitalizationHint"/>
		<string ux:Property="InputHint"/>
		<!-- ////////////////////////////////////////// -->
		<JavaScript>
			var Obs = require("FuseJS/Observable");
			var focused = this.Focused.inner();
			var textOb = this.TextValue.inner();
			var text = "";
			var canMove = Obs(false);

			textOb.onValueChanged(module,function(val){
				text = val;
			});

			focused.onValueChanged(module,function(focus){
				//Defines the Lable movement
				if(focus){
					canMove.value = false;
				}else if(text !== "" && text !== undefined && text !== null){
					canMove.value = false;
				}else{
					canMove.value = true;
				}
			});
			
			module.exports = {
				canMove : canMove
			};
		</JavaScript>
		<DockPanel Width="85%" Alignment="Center">
			<Text ux:Name="errorMessage" Value="{Property ErrorMessage}" Color="ErrorColor" Visibility="Hidden" Dock="Bottom" Font="FontMedium" FontSize="12"/>
			<Rectangle ux:Name="line" Color="NeutralColor" Height="2" Dock="Bottom"/>
			
			<StackPanel Orientation="Horizontal" ItemSpacing="5">
				<Icon ux:Name="icon" Value="{Property Icon}" Color="NeutralColor"/>
				<Panel>
					<WhileTrue Value="{Property HasActionStyleHandler}">
							<TextInput Value="{Property TextValue}" Width="230" CaretColor="{Property FocusColor}" TextColor="NeutralColor" ActionStyle="{Property ActionStyle}" IsPassword="{Property IsPassword}" AutoCapitalizationHint="{Property AutoCapitalizationHint}" InputHint="{Property InputHint}" ActionTriggered="{Property ActionStyleHandler}"/>
					</WhileTrue>
					<WhileFalse Value="{Property HasActionStyleHandler}">
							<TextInput Value="{Property TextValue}" Width="230" CaretColor="{Property FocusColor}" TextColor="NeutralColor" ActionStyle="{Property ActionStyle}" IsPassword="{Property IsPassword}" AutoCapitalizationHint="{Property AutoCapitalizationHint}" InputHint="{Property InputHint}"/>
					</WhileFalse>
					<WhileFalse Value="{Property Error}">
						<WhileFocused>
							<Change icon.Color="{Property FocusColor}" Duration="0.2"/>
							<Change line.Color="{Property FocusColor}" Duration="0.2"/>
							<Change label.Color="{Property FocusColor}" Duration="0.2"/>
						</WhileFocused>
					</WhileFalse>
					<WhileFocused>
						<Set this.Focused="true"/>
					</WhileFocused>
					<WhileNotFocused>
						<Set this.Focused="false"/>
					</WhileNotFocused>
					<WhileTrue Value="{canMove}">
						<Change label.Font="FontLightItalic" Duration="0.2"/>
						<Move Target="label" X="30" Y="23" Duration="0.2"/>
					</WhileTrue>
				</Panel>
			</StackPanel>
			<Text ux:Name="label" Color="NeutralColor" Font="FontRegular" FontSize="15" Value="{Property Label}" Alignment="CenterLeft" Dock="Top" />
			<WhileTrue Value="{Property Error}">
				<Change label.Color="ErrorColor" Duration="0.2"/>
				<Change icon.Color="ErrorColor" Duration="0.2"/>
				<Change line.Color="ErrorColor" Duration="0.2"/>
				<Change errorMessage.Visibility="Visible" Duration="0.2"/>
			</WhileTrue>
		</DockPanel>	
	</Panel>
</Panel>